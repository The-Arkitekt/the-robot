@startuml

class Observer <<Message>>

interface Message
{
  + init() : void
  + identifier() const : uint8_t
  + pack() : ArrayList<uint8_t>
  + unpack(const ArrayList<uint8_t>& data) : void
}

class DriveStateCommand
{
  + init() : void
  + identifier() const : uint8_t
  + pack() : ArrayList<uint8_t>
  + unpack(const ArrayList<uint8_t>& data) : void

  -- Message Fields --
  + xDirection : int8_t
  + yDirection : int8_t
  + zDirection : int8_t
  --
}

enum Topics
{
  + DRIVE_STATE_COMMAND_TOPIC
}

Observer ..> Message
DriveStateCommand --|> Message

@enduml
